generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Lead {
  id                Int        @id @default(autoincrement())
  leadId            String     @unique
  linkedinUrl       String?
  employeeRatio     String?
  leadSource        String
  employeeCount     Int?
  createdAt         DateTime   @default(now())
  company           String
  website           String?
  industry          String?
  leadStatus        String
  hourlyRate        Decimal?
  deployedCount     Int?
  country           String
  annualRevenue     Decimal?
  vendorManagement  String?
  address           String     @default("N/A")
  description       String     @default("N/A")
  contact           Contact[]
  activity          Activity[]
  leadSourcer       Users      @relation(fields: [leadSourcerUserId], references: [userId])
  leadSourcerUserId Int
  accountStatus     Int?       @default(0)
  account           Account?   @relation(fields: [accountId], references: [accountId])
  accountId         Int?
}

model Activity {
  id             Int      @id @default(autoincrement())
  lead           Lead     @relation(fields: [leadId], references: [leadId])
  leadId         String
  description    String
  typeOfActivity String
  activityTime   DateTime @default(now())
  leadSourcer    Users    @relation(fields: [createdBy], references: [userId])
  createdBy      Int
  createdAt      DateTime @default(now())
  modifiedAt     DateTime @default(now())
}

model Contact {
  id               Int     @id @default(autoincrement())
  lead             Lead    @relation(fields: [leadId], references: [leadId])
  leadId           String
  contactFirstName String
  contactLastName  String
  title            String
  phone            String  @unique
  email            String  @unique
  skypeId          String?
}

model Users {
  userId     Int        @id @default(autoincrement())
  name       String
  email      String     @unique
  phone      String     @unique
  password   String
  lead       Lead[]
  activities Activity[]
  role       String
  token      String?
  parent     Int?
  account    Account[]
}

model Config {
  id          Int     @id @default(autoincrement())
  status      Int     @default(1)
  type        String
  label       String  @unique
  information String?
}

model Account {
  accountId      Int     @id @default(autoincrement())
  accountName    String  @unique
  accountType    String
  accountOwner   String
  handler        Users   @relation(fields: [handlerId], references: [userId])
  handlerId      Int
  foundedIn      String
  rating         String
  Employees      Int
  billingCountry String
  billingState   String
  leadId         Lead[]
  annualRevenue  Decimal @default(0)
  description    String
}
